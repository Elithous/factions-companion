# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
networks:
  backend:
    driver: bridge
services:
  backend:
    build:
      context: .
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mysql:9.1.0
    restart: always
    networks:
      - backend
    environment:
      MYSQL_DATABASE: 'game-${GAME_ID}'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${DB_USER}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${DB_PASSWORD}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '${DB_PORT}:3306'
    expose:
      # Opens port 3306 on the container
      - '{$DB_PORT}'
    # Where our data will be persisted
    volumes:
      - ./db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
# Names our volume
volumes:
  db-data: